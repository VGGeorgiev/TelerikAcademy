@model IEnumerable<KendoUI_LibrarySystem.Models.BookModel>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@(Html.Kendo().Grid(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Title).Width(150);
        columns.Bound(p => p.Author).Width(100);
        columns.Bound(p => p.Category).Width(100);
        columns.Bound(p => p.ISBN).Width(100);
        columns.Bound(p => p.WebSite).Width(100);
        columns.Bound(p => p.Description).Width(100);
        columns.Command(command => 
        { 
            command.Edit(); 
            command.Destroy(); 
        }).Width(160);
    })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(5)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.BookId))
        .Create(update => update.Action("Create", "Books"))
        .Read(read => read.Action("Index", "Books"))
        .Update(update => update.Action("Edit", "Books"))
        .Destroy(update => update.Action("Delete", "Books"))
    )
)

<script>
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += thi + "\n";
                    })
                }
            })
            alert(message);
        }
    }
</script>